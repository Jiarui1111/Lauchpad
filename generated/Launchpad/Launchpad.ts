// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class IPTokenDeployed extends ethereum.Event {
  get params(): IPTokenDeployed__Params {
    return new IPTokenDeployed__Params(this);
  }
}

export class IPTokenDeployed__Params {
  _event: IPTokenDeployed;

  constructor(event: IPTokenDeployed) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenCreator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class Launchpad extends ethereum.SmartContract {
  static bind(address: Address): Launchpad {
    return new Launchpad("Launchpad", address);
  }

  deployToken(
    tokenCreator: Address,
    v3Deployer: Address,
    weth: Address,
    bidWallAmount: BigInt,
    antiSnipeDuration: BigInt,
    name: string,
    symbol: string,
  ): Address {
    let result = super.call(
      "deployToken",
      "deployToken(address,address,address,uint256,uint256,string,string):(address)",
      [
        ethereum.Value.fromAddress(tokenCreator),
        ethereum.Value.fromAddress(v3Deployer),
        ethereum.Value.fromAddress(weth),
        ethereum.Value.fromUnsignedBigInt(bidWallAmount),
        ethereum.Value.fromUnsignedBigInt(antiSnipeDuration),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
      ],
    );

    return result[0].toAddress();
  }

  try_deployToken(
    tokenCreator: Address,
    v3Deployer: Address,
    weth: Address,
    bidWallAmount: BigInt,
    antiSnipeDuration: BigInt,
    name: string,
    symbol: string,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployToken",
      "deployToken(address,address,address,uint256,uint256,string,string):(address)",
      [
        ethereum.Value.fromAddress(tokenCreator),
        ethereum.Value.fromAddress(v3Deployer),
        ethereum.Value.fromAddress(weth),
        ethereum.Value.fromUnsignedBigInt(bidWallAmount),
        ethereum.Value.fromUnsignedBigInt(antiSnipeDuration),
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(symbol),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ipWorld(): Address {
    let result = super.call("ipWorld", "ipWorld():(address)", []);

    return result[0].toAddress();
  }

  try_ipWorld(): ethereum.CallResult<Address> {
    let result = super.tryCall("ipWorld", "ipWorld():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get ipWorld_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployTokenCall extends ethereum.Call {
  get inputs(): DeployTokenCall__Inputs {
    return new DeployTokenCall__Inputs(this);
  }

  get outputs(): DeployTokenCall__Outputs {
    return new DeployTokenCall__Outputs(this);
  }
}

export class DeployTokenCall__Inputs {
  _call: DeployTokenCall;

  constructor(call: DeployTokenCall) {
    this._call = call;
  }

  get tokenCreator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get v3Deployer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get weth(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get bidWallAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get antiSnipeDuration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get name(): string {
    return this._call.inputValues[5].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class DeployTokenCall__Outputs {
  _call: DeployTokenCall;

  constructor(call: DeployTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
